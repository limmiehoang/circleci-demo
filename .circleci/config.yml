version: 2

jobs:
  build:
    docker:
      - image: circleci/golang:1.9
    working_directory: /go/src/github.com/limmiehoang/circleci-demo
    steps:
      - checkout
      - run:
          name: Update library
          command: |
            go get github.com/Masterminds/glide
            go install github.com/Masterminds/glide
            glide up
            go test $(glide novendor)
      - run:
          name: Install docker compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker
      - run:
          name: Update docker credentials
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Build and push docker image
          command: |
            docker-compose build
            docker-compose push

  deploy:
    docker:
      - image: circleci/golang:1.9
    working_directory: /go/src/github.com/limmiehoang/circleci-demo
    steps:
      - checkout
      - run: |
          scp -P $SSH_PORT cmd/demo/demo.toml $SSH_USER@$SSH_HOST:~/
          scp -P $SSH_PORT docker-compose.yml $SSH_USER@$SSH_HOST:~/
          ssh -p $SSH_PORT $SSH_USER@$SSH_HOST << EOF
            mkdir -p /etc/circleci-demo;
            mv demo.toml docker-compose.yml /etc/circleci-demo/;
            cd /etc/circleci-demo;
            docker-compose pull;
            docker-compose down;
            docker-compose up -d;
          EOF

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master